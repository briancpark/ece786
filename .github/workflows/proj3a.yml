name: Proj3A

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Schedule to run at 00:00 UTC on the 1st of every month
    - cron: '0 0 1 * *'

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build-and-run:
    runs-on: ubuntu-20.04
    env:
      CUDA_INSTALL_PATH: /usr/local/cuda-10.1
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
      shell: bash

    - name: Pull Docker image
      run: |
        docker pull pli11/gpgpusim:cuda_10_1
      shell: bash

    - name: Run Docker container
      run: |
        docker run -w /root -itd --name gpgpusim pli11/gpgpusim:cuda_10_1 /bin/bash
      shell: bash

    - name: Copy repository contents to container
      run: |
        docker cp $GITHUB_WORKSPACE gpgpusim:/workspace
      shell: bash

    - name: Build and Run
      continue-on-error: true
      run: |
        docker exec -i gpgpusim bash -c "
          cd /root/gpgpu-sim_distribution && 
          git checkout tags/v4.0.1 -b v401 && 
          source setup_environment && 
          cp /workspace/proj/proj3/proj3a/gpgpu-sim/shader.cc src/gpgpu-sim/shader.cc && 
          cp /workspace/proj/proj3/proj3a/gpgpu-sim/shader.h src/gpgpu-sim/shader.h && 
          make -j && 
          mkdir -p test && 
          cp -r /workspace/proj/proj2/ISPASS test && 
          cp configs/tested-cfgs/SM6_TITANX/* test && 
          cd test/ISPASS && 
          for benchmark in BFS LIB LPS NN NQU; do 
            cd $benchmark && 
            cp ../../gpgpusim.config . && 
            echo \"-gpgpu_max_insn 100000000\" >> gpgpusim.config && 
            cp ../../config_pascal_islip.icnt . && 
            case $benchmark in 
              BFS) ./ispass-2009-BFS graph65536.txt ;; 
              LIB) ./ispass-2009-LIB ;; 
              LPS) ./ispass-2009-LPS ;; 
              NN) mkdir -p data/ && cp lw*.wei data/ && cp t10k-images-idx3-ubyte data/ && ./ispass-2009-NN 28 ;; 
              NQU) ./ispass-2009-NQU ;; 
            esac && 
            cd ..; 
          done"
      shell: bash