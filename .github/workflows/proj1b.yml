name: Proj1B

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Schedule to run at 00:00 UTC on the 1st of every month
    - cron: '0 0 1 * *'

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build-and-run:
    runs-on: ubuntu-20.04
    container: 
      image: pli11/gpgpusim:cuda_10_1
      options: --user root
    env:
      CUDA_INSTALL_PATH: /usr/local/cuda-10.1
    steps:
    - name: Verify Environment
      run: |
        echo "Container OS:"
        cat /etc/os-release
        echo "User: $(id)"
      shell: bash

    - name: Install Dependencies for GLIBC
      run: |
        apt-get update && apt-get install -y build-essential manpages-dev gawk python3 sed
      shell: bash

    - name: Upgrade GLIBC
      run: |
        bash --noprofile --norc -e -o pipefail <<EOF
        wget http://ftp.gnu.org/gnu/libc/glibc-2.28.tar.gz
        tar -xvzf glibc-2.28.tar.gz
        cd glibc-2.28
        mkdir build && cd build
        ../configure --prefix=/opt/glibc-2.28
        make -j$(nproc)
        make install
        mkdir -p /opt/glibc-2.28/etc
        echo "/opt/glibc-2.28/lib" > /opt/glibc-2.28/etc/ld.so.conf
        ldconfig -r /opt/glibc-2.28
        EOF
      shell: bash

    - name: Set GLIBC Path
      run: |
        echo "/opt/glibc-2.28/lib" > /etc/ld.so.conf.d/glibc-2.28.conf
        ldconfig
        export LD_LIBRARY_PATH=/opt/glibc-2.28/lib:$LD_LIBRARY_PATH
      shell: bash

    - name: Run Node.js Command
      run: |
        LD_LIBRARY_PATH=/opt/glibc-2.28/lib /__e/node20/bin/node --version
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set CUDA path globally
      run: |
        echo "CUDA_INSTALL_PATH=/usr/local/cuda-10.1" >> $GITHUB_ENV
        echo "CUDA_PATH=$CUDA_INSTALL_PATH" >> $GITHUB_ENV
        echo "PATH=$CUDA_INSTALL_PATH/bin:$PATH" >> $GITHUB_ENV
      shell: bash

    - name: Set up GPGPU-Sim
      run: |
        cd /root/gpgpu-sim_distribution
        git checkout tags/v4.0.1 -b v401
        make clean
        source setup_environment
        make -j
      shell: bash

    - name: Clone and build vectorAdd
      run: |
        source /root/gpgpu-sim_distribution/setup_environment
        cd /root
        git clone https://github.com/peiyi1/vectorAdd.git
        cd vectorAdd/
        make -j
      shell: bash
    - name: Run vectorAdd
      run: |
        source /root/gpgpu-sim_distribution/setup_environment
        cd /root/vectorAdd/
        cp /root/gpgpu-sim_distribution/configs/tested-cfgs/SM7_QV100/* .
        ./vectorAdd > output.txt
        cat output.txt
      shell: bash

    - name: Upload output
      uses: actions/upload-artifact@v3
      with:
        name: vectorAdd-output
        path: /root/vectorAdd/output.txt