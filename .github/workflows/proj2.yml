name: Proj2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Schedule to run at 00:00 UTC on the 1st of every month
    - cron: '0 0 1 * *'

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build-and-run:
    runs-on: ubuntu-20.04
    env:
      CUDA_INSTALL_PATH: /usr/local/cuda-10.1
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
      shell: bash

    - name: Pull Docker image
      run: |
        docker pull pli11/gpgpusim:cuda_10_1
      shell: bash

    - name: Run Docker container
      run: |
        docker run -w /root -itd --name gpgpusim pli11/gpgpusim:cuda_10_1 /bin/bash
      shell: bash

    - name: Copy repository contents to container
      run: |
        docker cp $GITHUB_WORKSPACE gpgpusim:/workspace
      shell: bash

    - name: Build and Run Task 1
      run: |
        docker exec -i gpgpusim bash -c "
          source /root/gpgpu-sim_distribution/setup_environment &&
          cd /root/gpgpu-sim_distribution &&
          git checkout tags/v4.0.1 -b v401 &&
          cp /workspace/proj/proj2/cuda-sim/instructions.cc src/cuda-sim/instructions.cc &&
          cp /workspace/proj/proj2/vectorAdd.cu /root/vectorAdd.cu &&
          make -j &&
          cd /root &&
          cp /root/gpgpu-sim_distribution/configs/tested-cfgs/SM7_QV100/* . &&
          nvcc -arch=sm_70 -O2 --cudart=shared -o vectorAdd vectorAdd.cu &&
          ./vectorAdd > output_task1.txt"
      shell: bash

    - name: Build and Run Task 2
      continue-on-error: true
      run: |
        docker exec -i gpgpusim bash -c "
          source /root/gpgpu-sim_distribution/setup_environment &&
          cd /root/gpgpu-sim_distribution &&
          git checkout -- . &&
          make -j &&
          mkdir -p test &&
          cp -r /workspace/proj/proj2/ISPASS test &&
          cp configs/tested-cfgs/SM6_TITANX/* test &&
          cd test/ISPASS &&
          for benchmark in BFS LIB LPS NN NQU; do
            cd $benchmark &&
            cp ../../gpgpusim.config . &&
            echo \"-gpgpu_max_insn 100000000\" >> gpgpusim.config &&
            cp ../../config_pascal_islip.icnt . &&
            case $benchmark in
              BFS) ./ispass-2009-BFS graph65536.txt ;;
              LIB) ./ispass-2009-LIB ;;
              LPS) ./ispass-2009-LPS ;;
              NN) mkdir -p data/ && cp lw*.wei data/ && cp t10k-images-idx3-ubyte data/ && ./ispass-2009-NN 28 ;;
              NQU) ./ispass-2009-NQU ;;
            esac &&
            cd ..;
          done"
      shell: bash

    - name: Build and Run Task 3
      run: |
        docker exec -i gpgpusim bash -c "
          source /root/gpgpu-sim_distribution/setup_environment &&
          cd /root/gpgpu-sim_distribution &&
          git checkout -- . &&
          cp /workspace/proj/proj2/gpgpu-sim/task3/shader.cc src/gpgpu-sim/shader.cc &&
          cp /workspace/proj/proj2/gpgpu-sim/task3/shader.h src/gpgpu-sim/shader.h &&
          make -j &&
          cd /root &&
          cp /root/gpgpu-sim_distribution/configs/tested-cfgs/SM7_QV100/* . &&
          nvcc -arch=sm_70 -O2 --cudart=shared -o vectorAdd vectorAdd.cu &&
          ./vectorAdd > output_task3.txt"
      shell: bash

    - name: Build and Run Task 4
      run: |
        docker exec -i gpgpusim bash -c "
          source /root/gpgpu-sim_distribution/setup_environment &&
          cd /root/gpgpu-sim_distribution &&
          git checkout -- . &&
          cp /workspace/proj/proj2/gpgpu-sim/task4/shader.cc src/gpgpu-sim/shader.cc &&
          cp /workspace/proj/proj2/gpgpu-sim/task4/shader.h src/gpgpu-sim/shader.h &&
          make -j &&
          cd /root &&
          cp /root/gpgpu-sim_distribution/configs/tested-cfgs/SM7_QV100/* . &&
          nvcc -arch=sm_70 -O2 --cudart=shared -o vectorAdd vectorAdd.cu &&
          ./vectorAdd > output_task4.txt"
      shell: bash

    - name: Upload Task 2 Output
      uses: actions/upload-artifact@v3
      with:
        name: task-2-output
        path: test/**/output.txt